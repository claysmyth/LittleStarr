{
    "sourceFile": "visualization_functions/altair_utils.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1679699194379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1679699216123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import altair as alt\n \n-def create_line_plot(df, columns, width=500, height=300, color_scheme='category10', interactive=True):\n+def create_overlaid_line_plot(df, columns, width=500, height=300, color_scheme='category10', interactive=True):\n     \"\"\"\n     Creates an Altair line plot with the specified columns overlaid on top of each other.\n     \n     Parameters:\n"
                },
                {
                    "date": 1679699545657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     Returns:\n         An Altair chart object.\n     \"\"\"\n     # Melt the data so that each row represents one point on the line chart\n-    melted_df = df[columns].melt(var_name='column', value_name='value')\n+    melted_df = df[columns].melt(var_name='column', value_name='value', ignore_index=False)\n     \n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index', title=None),\n"
                },
                {
                    "date": 1679699583801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,5 +32,5 @@\n     # Add interactivity if desired\n     if interactive:\n         chart = chart.interactive()\n     \n-    return chart\n+    return chart, melted_df\n"
                },
                {
                    "date": 1679700135396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import altair as alt\n \n-def create_overlaid_line_plot(df, columns, width=500, height=300, color_scheme='category10', interactive=True):\n+def create_overlaid_line_plot(df, index_column, columns, width=500, height=300, color_scheme='category10', interactive=True):\n     \"\"\"\n     Creates an Altair line plot with the specified columns overlaid on top of each other.\n     \n     Parameters:\n"
                },
                {
                    "date": 1679700146785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import altair as alt\n \n-def create_overlaid_line_plot(df, index_column, columns, width=500, height=300, color_scheme='category10', interactive=True):\n+def create_overlaid_line_plot(df, index_column, plot_columns, width=500, height=300, color_scheme='category10', interactive=True):\n     \"\"\"\n     Creates an Altair line plot with the specified columns overlaid on top of each other.\n     \n     Parameters:\n@@ -15,9 +15,9 @@\n     Returns:\n         An Altair chart object.\n     \"\"\"\n     # Melt the data so that each row represents one point on the line chart\n-    melted_df = df[columns].melt(var_name='column', value_name='value', ignore_index=False)\n+    melted_df = df[columns].melt(id_varsvar_name='column', value_name='value', ignore_index=False)\n     \n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index', title=None),\n"
                },
                {
                    "date": 1679700154868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     Returns:\n         An Altair chart object.\n     \"\"\"\n     # Melt the data so that each row represents one point on the line chart\n-    melted_df = df[columns].melt(id_varsvar_name='column', value_name='value', ignore_index=False)\n+    melted_df = df[columns].melt(id_vars=['index_column'var_name='column', value_name='value', ignore_index=False)\n     \n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index', title=None),\n"
                },
                {
                    "date": 1679700168710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     Returns:\n         An Altair chart object.\n     \"\"\"\n     # Melt the data so that each row represents one point on the line chart\n-    melted_df = df[columns].melt(id_vars=['index_column'var_name='column', value_name='value', ignore_index=False)\n+    melted_df = df[index_column + columns].melt(id_vars=['index_column'], var_name='column', value_name='value', ignore_index=False)\n     \n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index', title=None),\n"
                },
                {
                    "date": 1679700177590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     Returns:\n         An Altair chart object.\n     \"\"\"\n     # Melt the data so that each row represents one point on the line chart\n-    melted_df = df[index_column + columns].melt(id_vars=['index_column'], var_name='column', value_name='value', ignore_index=False)\n+    melted_df = df[index_column + plot_columns].melt(id_vars=['index_column'], var_name='column', value_name='value', ignore_index=False)\n     \n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index', title=None),\n"
                },
                {
                    "date": 1679700240768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index', title=None),\n         y=alt.Y('value', title=None),\n         color=alt.Color('column', scale=alt.Scale(scheme=color_scheme)),\n-        tooltip=[alt.Tooltip('index:T'), alt.Tooltip('value:Q'), alt.Tooltip('column:N')]\n+        tooltip=[alt.Tooltip('index:Q'), alt.Tooltip('value:Q'), alt.Tooltip('column:N')]\n     ).properties(\n         width=width,\n         height=height\n     )\n"
                },
                {
                    "date": 1679700246191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     melted_df = df[index_column + plot_columns].melt(id_vars=['index_column'], var_name='column', value_name='value', ignore_index=False)\n     \n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n-        x=alt.X('index', title=None),\n+        x=alt.X('index:Q', title=None),\n         y=alt.Y('value', title=None),\n         color=alt.Color('column', scale=alt.Scale(scheme=color_scheme)),\n         tooltip=[alt.Tooltip('index:Q'), alt.Tooltip('value:Q'), alt.Tooltip('column:N')]\n     ).properties(\n"
                },
                {
                    "date": 1679700251701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     \n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index:Q', title=None),\n-        y=alt.Y('value', title=None),\n+        y=alt.Y('value:Q', title=None),\n         color=alt.Color('column', scale=alt.Scale(scheme=color_scheme)),\n         tooltip=[alt.Tooltip('index:Q'), alt.Tooltip('value:Q'), alt.Tooltip('column:N')]\n     ).properties(\n         width=width,\n"
                },
                {
                    "date": 1679700258947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index:Q', title=None),\n         y=alt.Y('value:Q', title=None),\n-        color=alt.Color('column', scale=alt.Scale(scheme=color_scheme)),\n+        color=alt.Color('column:N', scale=alt.Scale(scheme=color_scheme)),\n         tooltip=[alt.Tooltip('index:Q'), alt.Tooltip('value:Q'), alt.Tooltip('column:N')]\n     ).properties(\n         width=width,\n         height=height\n"
                },
                {
                    "date": 1679700450934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     Returns:\n         An Altair chart object.\n     \"\"\"\n     # Melt the data so that each row represents one point on the line chart\n-    melted_df = df[index_column + plot_columns].melt(id_vars=['index_column'], var_name='column', value_name='value', ignore_index=False)\n+    melted_df = df[index_column + plot_columns].melt(id_vars=[index_column], var_name='column', value_name='value', ignore_index=False)\n     \n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index:Q', title=None),\n"
                },
                {
                    "date": 1679700491159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     Returns:\n         An Altair chart object.\n     \"\"\"\n     # Melt the data so that each row represents one point on the line chart\n-    melted_df = df[index_column + plot_columns].melt(id_vars=[index_column], var_name='column', value_name='value', ignore_index=False)\n+    melted_df = df[index_column + plot_columns].melt(id_vars=[index_column], var_name='column', value_name='value', ignore_index=False).rename()\n     \n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index:Q', title=None),\n"
                },
                {
                    "date": 1679700496530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     Returns:\n         An Altair chart object.\n     \"\"\"\n     # Melt the data so that each row represents one point on the line chart\n-    melted_df = df[index_column + plot_columns].melt(id_vars=[index_column], var_name='column', value_name='value', ignore_index=False).rename()\n+    melted_df = df[index_column + plot_columns].melt(id_vars=[index_column], var_name='column', value_name='value', ignore_index=False).rename(columns={index_column: 'index'})\n     \n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index:Q', title=None),\n"
                },
                {
                    "date": 1679700525702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     Returns:\n         An Altair chart object.\n     \"\"\"\n     # Melt the data so that each row represents one point on the line chart\n-    melted_df = df[index_column + plot_columns].melt(id_vars=[index_column], var_name='column', value_name='value', ignore_index=False).rename(columns={index_column: 'index'})\n+    melted_df = df[index_column + plot_columns].melt(id_vars=[index_column], var_name='column', value_name='value', ignore_index=False).rename(columns={index_column[0]: 'index'})\n     \n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index:Q', title=None),\n"
                },
                {
                    "date": 1679700531424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     Returns:\n         An Altair chart object.\n     \"\"\"\n     # Melt the data so that each row represents one point on the line chart\n-    melted_df = df[index_column + plot_columns].melt(id_vars=[index_column], var_name='column', value_name='value', ignore_index=False).rename(columns={index_column[0]: 'index'})\n+    melted_df = df[index_column + plot_columns].melt(id_vars=index_column], var_name='column', value_name='value', ignore_index=False).rename(columns={index_column[0]: 'index'})\n     \n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index:Q', title=None),\n"
                },
                {
                    "date": 1679700604775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n     Creates an Altair line plot with the specified columns overlaid on top of each other.\n     \n     Parameters:\n         df (pandas.DataFrame): The data to be plotted.\n+        index_column (list): A list of column names to use as the x-axis.\n         columns (list): A list of column names to plot.\n         width (int): The width of the plot in pixels. Default is 500.\n         height (int): The height of the plot in pixels. Default is 300.\n         color_scheme (str): The name of the color scheme to use for the lines. Default is 'category10'.\n@@ -15,9 +16,9 @@\n     Returns:\n         An Altair chart object.\n     \"\"\"\n     # Melt the data so that each row represents one point on the line chart\n-    melted_df = df[index_column + plot_columns].melt(id_vars=index_column], var_name='column', value_name='value', ignore_index=False).rename(columns={index_column[0]: 'index'})\n+    melted_df = df[index_column + plot_columns].melt(id_vars=index_column, var_name='column', value_name='value', ignore_index=False).rename(columns={index_column[0]: 'index'})\n     \n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index:Q', title=None),\n"
                },
                {
                    "date": 1679700610894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     \n     Parameters:\n         df (pandas.DataFrame): The data to be plotted.\n         index_column (list): A list of column names to use as the x-axis.\n-        columns (list): A list of column names to plot.\n+        plot_columns (list): A list of column names to plot.\n         width (int): The width of the plot in pixels. Default is 500.\n         height (int): The height of the plot in pixels. Default is 300.\n         color_scheme (str): The name of the color scheme to use for the lines. Default is 'category10'.\n         interactive (bool): Whether to include interactive elements in the chart, such as zooming and panning.\n"
                },
                {
                    "date": 1680649741947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     \n     # Create the chart\n     chart = alt.Chart(melted_df).mark_line().encode(\n         x=alt.X('index:Q', title=None),\n-        y=alt.Y('value:Q', title=None),\n+        y=alt.Y('value:Q', title=None, scale=),\n         color=alt.Color('column:N', scale=alt.Scale(scheme=color_scheme)),\n         tooltip=[alt.Tooltip('index:Q'), alt.Tooltip('value:Q'), alt.Tooltip('column:N')]\n     ).properties(\n         width=width,\n"
                }
            ],
            "date": 1679699194379,
            "name": "Commit-0",
            "content": "import altair as alt\n\ndef create_line_plot(df, columns, width=500, height=300, color_scheme='category10', interactive=True):\n    \"\"\"\n    Creates an Altair line plot with the specified columns overlaid on top of each other.\n    \n    Parameters:\n        df (pandas.DataFrame): The data to be plotted.\n        columns (list): A list of column names to plot.\n        width (int): The width of the plot in pixels. Default is 500.\n        height (int): The height of the plot in pixels. Default is 300.\n        color_scheme (str): The name of the color scheme to use for the lines. Default is 'category10'.\n        interactive (bool): Whether to include interactive elements in the chart, such as zooming and panning.\n        \n    Returns:\n        An Altair chart object.\n    \"\"\"\n    # Melt the data so that each row represents one point on the line chart\n    melted_df = df[columns].melt(var_name='column', value_name='value')\n    \n    # Create the chart\n    chart = alt.Chart(melted_df).mark_line().encode(\n        x=alt.X('index', title=None),\n        y=alt.Y('value', title=None),\n        color=alt.Color('column', scale=alt.Scale(scheme=color_scheme)),\n        tooltip=[alt.Tooltip('index:T'), alt.Tooltip('value:Q'), alt.Tooltip('column:N')]\n    ).properties(\n        width=width,\n        height=height\n    )\n    \n    # Add interactivity if desired\n    if interactive:\n        chart = chart.interactive()\n    \n    return chart\n"
        }
    ]
}